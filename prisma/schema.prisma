// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite" // NOTE: sqlite does not work with NextAuth.js
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String      @id @default(cuid())
    name          String?
    email         String?     @unique
    image         String?
    emailVerified DateTime?
    accounts      Account[]
    sessions      Session[]
    FoodEntry     FoodEntry[]
    maxCalories   Int         @default(2100)
    admin         Boolean     @default(false)
}

model FoodEntry {
    id       String   @id @default(cuid())
    name     String
    calories Float
    price    Float
    userId   String
    date     DateTime
    user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
